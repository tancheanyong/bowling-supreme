/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.0.9 scene.gltf
Author: Alex Bes (https://sketchfab.com/alexbescg)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/worn-baseball-ball-fdf3de6ae225421ea78961b897b9608a
Title: Worn Baseball Ball
*/

import React, { FC, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useSphere } from "@react-three/cannon";
import { DoubleSide, Group, Mesh, Vector3 } from "three";
import { useFrame } from "@react-three/fiber";

type BaseballProps = {
  position?: [number, number, number];
  radius?: number;
};

const Baseball: FC<BaseballProps> = ({
  position = [0, 0.5, 0],
  radius = 1,
}) => {
  const { nodes, materials } = useGLTF("/assets/baseball/scene.gltf");

  const [ballRef, api] = useSphere(
    () => ({
      args: [0.42 * radius],
      position,
      mass: 0.5,
      allowSleep: true,
    }),
    useRef<Group>(null!)
  );

  const onBallClick = () => {
    api.applyImpulse(
      [(Math.random() - 0.5) * 5, Math.random() * 5, -Math.random() * 20],
      [0, 0, 0]
    );
  };

  let currentPos = new Vector3();
  useFrame(() => {
    ballRef.current?.getWorldPosition(currentPos);
    if (currentPos.y < -30) {
      api.velocity.set(0, 0, 0);
      api.angularVelocity.set(0, 0, 0);
      api.position.set(position[0], position[1], position[2]);
    }
  });

  return (
    <group dispose={null} ref={ballRef} scale={radius} onClick={onBallClick}>
      <mesh
        castShadow
        geometry={(nodes as any).polySurface5_lambert1_0.geometry}
        material={materials.lambert1}
        rotation={[0, 0, 0]}
      />
    </group>
  );
};

useGLTF.preload("/assets/baseball/scene.gltf");

export default Baseball;
